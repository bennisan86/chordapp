{"ast":null,"code":"var _jsxFileName = \"/Users/bennisan/Sites/chordgame/src/components/Noteboard.js\";\nimport React from 'react';\nimport Note from './Note';\n\nclass Noteboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buttoncount: 0,\n      clean: false\n    };\n  }\n\n  toggleClass(i) {\n    const count = this.state.buttoncount;\n    const selectedone = i.target;\n    const allnotes = this.props.notes;\n\n    if (count <= 3) {\n      var newcount = this.state.buttoncount + 1;\n      this.setState({\n        buttoncount: newcount\n      });\n      selectedone.classList.add(\"toggled\");\n    } else {\n      var cleancount = 0;\n      this.setState({\n        buttoncount: cleancount\n      });\n\n      for (let i = 0; i < allnotes.length; i++) {\n        if (selectedone.classList.contains(\"toggled\")) {\n          selectedone.classList.remove(\"toggled\");\n        }\n      }\n    }\n\n    console.log(i.target);\n    this.props.onClick(i);\n  }\n\n  render() {\n    const allnotes = this.props.notes;\n    const listItems = allnotes.map(note => React.createElement(Note, {\n      value: note,\n      key: note,\n      note: note,\n      onClick: i => this.toggleClass(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, note));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"noteboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, listItems), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.buttoncount));\n  }\n\n}\n\nexport default Noteboard;","map":{"version":3,"sources":["/Users/bennisan/Sites/chordgame/src/components/Noteboard.js"],"names":["React","Note","Noteboard","Component","constructor","props","state","buttoncount","clean","toggleClass","i","count","selectedone","target","allnotes","notes","newcount","setState","classList","add","cleancount","length","contains","remove","console","log","onClick","render","listItems","map","note"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,CADF;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAIH;;AAEDC,EAAAA,WAAW,CAACC,CAAD,EAAI;AACX,UAAMC,KAAK,GAAG,KAAKL,KAAL,CAAWC,WAAzB;AACA,UAAMK,WAAW,GAAGF,CAAC,CAACG,MAAtB;AACA,UAAMC,QAAQ,GAAG,KAAKT,KAAL,CAAWU,KAA5B;;AAEA,QAAIJ,KAAK,IAAI,CAAb,EAAe;AACb,UAAIK,QAAQ,GAAG,KAAKV,KAAL,CAAWC,WAAX,GAAyB,CAAxC;AACA,WAAKU,QAAL,CAAc;AACZV,QAAAA,WAAW,EAAES;AADD,OAAd;AAGAJ,MAAAA,WAAW,CAACM,SAAZ,CAAsBC,GAAtB,CAA0B,SAA1B;AACD,KAND,MAMO;AACL,UAAIC,UAAU,GAAG,CAAjB;AACA,WAAKH,QAAL,CAAc;AACZV,QAAAA,WAAW,EAAEa;AADD,OAAd;;AAGA,WAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGI,QAAQ,CAACO,MAA7B,EAAqCX,CAAC,EAAtC,EAA0C;AACxC,YAAGE,WAAW,CAACM,SAAZ,CAAsBI,QAAtB,CAA+B,SAA/B,CAAH,EAA6C;AAC3CV,UAAAA,WAAW,CAACM,SAAZ,CAAsBK,MAAtB,CAA6B,SAA7B;AACD;AACF;AACF;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYf,CAAC,CAACG,MAAd;AACA,SAAKR,KAAL,CAAWqB,OAAX,CAAmBhB,CAAnB;AACH;;AAIDiB,EAAAA,MAAM,GAAG;AACL,UAAMb,QAAQ,GAAG,KAAKT,KAAL,CAAWU,KAA5B;AACA,UAAMa,SAAS,GAAGd,QAAQ,CAACe,GAAT,CAAcC,IAAD,IAC3B,oBAAC,IAAD;AACI,MAAA,KAAK,EAAEA,IADX;AAEI,MAAA,GAAG,EAAEA,IAFT;AAGI,MAAA,IAAI,EAAEA,IAHV;AAII,MAAA,OAAO,EAAGpB,CAAD,IAAO,KAAKD,WAAL,CAAiBC,CAAjB,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKMoB,IALN,CADc,CAAlB;AAQA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BF,SAA5B,CADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKtB,KAAL,CAAWC,WAAjB,CAHF,CADF;AAOC;;AAtD+B;;AAyDxC,eAAeL,SAAf","sourcesContent":["import React from 'react';\nimport Note from './Note';\n\n\nclass Noteboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          buttoncount: 0,\n          clean: false\n        };\n    }\n\n    toggleClass(i) {\n        const count = this.state.buttoncount;\n        const selectedone = i.target;\n        const allnotes = this.props.notes;\n\n        if (count <= 3){\n          var newcount = this.state.buttoncount + 1;\n          this.setState({\n            buttoncount: newcount,\n          });\n          selectedone.classList.add(\"toggled\");\n        } else {\n          var cleancount = 0;\n          this.setState({\n            buttoncount: cleancount,\n          });\n          for (let i = 0; i < allnotes.length; i++) {\n            if(selectedone.classList.contains(\"toggled\")){\n              selectedone.classList.remove(\"toggled\");\n            }\n          }\n        }\n        console.log(i.target);\n        this.props.onClick(i);\n    };\n\n    \n\n    render() {\n        const allnotes = this.props.notes;\n        const listItems = allnotes.map((note) =>\n            <Note\n                value={note}\n                key={note}\n                note={note}\n                onClick={(i) => this.toggleClass(i)}\n                >{note}</Note>\n            );\n        return (\n          <div>\n            <div className=\"noteboard\">{listItems}\n            </div>\n            <div>{this.state.buttoncount}</div>\n          </div>\n          );\n        }\n    }\n\nexport default Noteboard;\n\n\n"]},"metadata":{},"sourceType":"module"}