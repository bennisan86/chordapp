{"ast":null,"code":"var _jsxFileName = \"/Users/bennisan/Sites/chordgame/src/Game.js\";\nimport React from 'react';\nimport './Game.css';\nimport './Game.sass';\nimport Challenge from './components/Challenge';\nimport Noteboard from './components/Noteboard';\nvar allchords = [{\n  chordname: 'Emaj7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Emin7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'E7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Fmaj7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Fmin7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'F7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Gmaj7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Gmin7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'G7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Abmaj7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Abmin7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Ab7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Amaj7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Amin7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'A7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Bbmaj7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Bbmin7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Bb7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Bmaj7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Bmin7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'B7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Cmaj7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Cmin7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'C7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Dbmaj7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Dbmin7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Db7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Dmaj7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Dmin7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'D7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Ebmaj7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Ebmin7',\n  notes: ['E', 'F', 'F#', 'G']\n}, {\n  chordname: 'Eb7',\n  notes: ['E', 'F', 'F#', 'G']\n}];\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chords: allchords,\n      notes: [{\n        id: 1,\n        value: 'E',\n        styling: 'noteboardbtn'\n      }, {\n        id: 2,\n        value: 'F',\n        styling: 'noteboardbtn'\n      }, {\n        id: 3,\n        value: 'F#',\n        styling: 'noteboardbtn'\n      }, {\n        id: 4,\n        value: 'G',\n        styling: 'noteboardbtn'\n      }, {\n        id: 5,\n        value: 'Gb',\n        styling: 'noteboardbtn'\n      }, {\n        id: 6,\n        value: 'A',\n        styling: 'noteboardbtn'\n      }, {\n        id: 7,\n        value: 'Bb',\n        styling: 'noteboardbtn'\n      }, {\n        id: 8,\n        value: 'B',\n        styling: 'noteboardbtn'\n      }, {\n        id: 9,\n        value: 'C',\n        styling: 'noteboardbtn'\n      }, {\n        id: 10,\n        value: 'Db',\n        styling: 'noteboardbtn'\n      }, {\n        id: 11,\n        value: 'D',\n        styling: 'noteboardbtn'\n      }, {\n        id: 12,\n        value: 'Eb',\n        styling: 'noteboardbtn'\n      }],\n      allclickednotes: [],\n      challenge: {},\n      score: 0,\n      styles: {\n        challenge: 'challenge',\n        win: 'hide',\n        lose: 'hide'\n      }\n    };\n  }\n\n  containsAllNotes(_arr1, _arr2) {\n    if (!Array.isArray(_arr1) || !Array.isArray(_arr2) || _arr1.length !== _arr2.length) return false;\n\n    var arr1 = _arr1.concat().sort();\n\n    var arr2 = _arr2.concat().sort();\n\n    for (var i = 0; i < arr1.length; i++) {\n      if (arr1[i] !== arr2[i]) return false;\n    }\n\n    return true;\n  }\n\n  componentDidMount() {\n    this.newChallenge();\n  }\n\n  componentDidUpdate(prevState) {\n    console.log(prevState.allclickednotes);\n\n    if (prevState.allclickednotes !== this.state.allclickednotes) {\n      this.countUp();\n    }\n  }\n\n  newChallenge() {\n    const newchallenge = this.state.chords[Math.floor(Math.random() * 34)];\n    this.setState({\n      challenge: newchallenge,\n      allclickednotes: [],\n      styles: {\n        challenge: 'challenge',\n        win: 'hide',\n        lose: 'hide'\n      }\n    });\n  }\n\n  handleClick(note) {\n    let allclickednotes = this.state.allclickednotes;\n    let notesCopy = this.state.notes.slice();\n    const ding = this.state.notes.indexOf(note);\n    notesCopy[ding].styling = \"noteboardbtn toggled\";\n    var clickednote = note.value;\n    this.setState({\n      allclickednotes: allclickednotes.concat(clickednote),\n      notes: notesCopy\n    });\n  }\n\n  countUp() {\n    let chordnotes = this.state.challenge.notes;\n    let allclickednotes = this.state.allclickednotes;\n\n    if (allclickednotes.length > 3) {\n      if (this.containsAllNotes(allclickednotes, chordnotes)) {\n        this.winner();\n      } else {\n        this.loser();\n      }\n\n      ;\n    }\n\n    ;\n  }\n\n  winner() {\n    console.log(\"I'm a winner!\"); // this.newChallenge();\n    // const newscore = this.state.score+1;\n    // const notesClear = [\n    //     {\n    //         id:1,\n    //         value:'E',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:2,\n    //         value:'F',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:3,\n    //         value:'F#',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:4,\n    //         value:'G',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:5,\n    //         value:'Gb',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:6,\n    //         value:'A',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:7,\n    //         value:'Bb',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:8,\n    //         value:'B',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:9,\n    //         value:'C',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:10,\n    //         value:'Db',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:11,\n    //         value:'D',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:12,\n    //         value:'Eb',\n    //         styling:'noteboardbtn'\n    //     },\n    // ];\n\n    this.setState({\n      // score: newscore,\n      // notes: notesClear,\n      styles: {\n        challenge: 'challenge',\n        win: 'icon',\n        lose: 'hide'\n      }\n    });\n  }\n\n  loser() {\n    console.log(\"I'm a loser!\");\n    this.setState({\n      // score: newscore,\n      // notes: notesClear,\n      styles: {\n        challenge: 'challenge',\n        win: 'hide',\n        lose: 'icon'\n      }\n    }); // this.newChallenge();\n    // const notesClear = [\n    //     {\n    //         id:1,\n    //         value:'E',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:2,\n    //         value:'F',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:3,\n    //         value:'F#',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:4,\n    //         value:'G',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:5,\n    //         value:'Gb',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:6,\n    //         value:'A',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:7,\n    //         value:'Bb',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:8,\n    //         value:'B',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:9,\n    //         value:'C',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:10,\n    //         value:'Db',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:11,\n    //         value:'D',\n    //         styling:'noteboardbtn'\n    //     },{\n    //         id:12,\n    //         value:'Eb',\n    //         styling:'noteboardbtn'\n    //     },\n    // ];\n    // this.setState({\n    //     notes: notesClear\n    // });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"total\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(Challenge, {\n      challenge: this.state.challenge,\n      styles: this.state.styles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }), React.createElement(Noteboard, {\n      notes: this.state.notes,\n      onClick: note => this.handleClick(note),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, this.state.allclickednotes));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/bennisan/Sites/chordgame/src/Game.js"],"names":["React","Challenge","Noteboard","allchords","chordname","notes","Game","Component","constructor","props","state","chords","id","value","styling","allclickednotes","challenge","score","styles","win","lose","containsAllNotes","_arr1","_arr2","Array","isArray","length","arr1","concat","sort","arr2","i","componentDidMount","newChallenge","componentDidUpdate","prevState","console","log","countUp","newchallenge","Math","floor","random","setState","handleClick","note","notesCopy","slice","ding","indexOf","clickednote","chordnotes","winner","loser","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Game.css';\nimport './Game.sass';\nimport Challenge from './components/Challenge';\nimport Noteboard from './components/Noteboard';\n\n\nvar allchords = [{\n    chordname: 'Emaj7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Emin7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'E7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Fmaj7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Fmin7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'F7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Gmaj7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Gmin7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'G7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Abmaj7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Abmin7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Ab7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Amaj7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Amin7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'A7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Bbmaj7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Bbmin7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Bb7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Bmaj7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Bmin7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'B7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Cmaj7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Cmin7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'C7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Dbmaj7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Dbmin7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Db7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Dmaj7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Dmin7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'D7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Ebmaj7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Ebmin7',\n    notes: ['E','F','F#','G']\n},{\n    chordname: 'Eb7',\n    notes: ['E','F','F#','G']\n}];\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chords: allchords,\n            notes: [\n                {\n                    id:1,\n                    value:'E',\n                    styling:'noteboardbtn'\n                },{\n                    id:2,\n                    value:'F',\n                    styling:'noteboardbtn'\n                },{\n                    id:3,\n                    value:'F#',\n                    styling:'noteboardbtn'\n                },{\n                    id:4,\n                    value:'G',\n                    styling:'noteboardbtn'\n                },{\n                    id:5,\n                    value:'Gb',\n                    styling:'noteboardbtn'\n                },{\n                    id:6,\n                    value:'A',\n                    styling:'noteboardbtn'\n                },{\n                    id:7,\n                    value:'Bb',\n                    styling:'noteboardbtn'\n                },{\n                    id:8,\n                    value:'B',\n                    styling:'noteboardbtn'\n                },{\n                    id:9,\n                    value:'C',\n                    styling:'noteboardbtn'\n                },{\n                    id:10,\n                    value:'Db',\n                    styling:'noteboardbtn'\n                },{\n                    id:11,\n                    value:'D',\n                    styling:'noteboardbtn'\n                },{\n                    id:12,\n                    value:'Eb',\n                    styling:'noteboardbtn'\n                },\n            ],\n\n            allclickednotes: [],\n            challenge: {},\n            score: 0,\n            styles: {\n                challenge: 'challenge',\n                win: 'hide',\n                lose: 'hide'\n            }\n        }\n    }\n    \n\n    containsAllNotes(_arr1,_arr2){\n        if (!Array.isArray(_arr1) || ! Array.isArray(_arr2) || _arr1.length !== _arr2.length)\n        return false;\n    \n        var arr1 = _arr1.concat().sort();\n        var arr2 = _arr2.concat().sort();\n    \n        for (var i = 0; i < arr1.length; i++) {\n            if (arr1[i] !== arr2[i])\n                return false;\n        }\n        return true;\n    }\n\n    componentDidMount(){\n        this.newChallenge();\n    }\n    componentDidUpdate(prevState){\n        console.log(prevState.allclickednotes);\n        if (prevState.allclickednotes !== this.state.allclickednotes) {\n        this.countUp();\n        }\n    }\n\n    newChallenge(){\n        const newchallenge = this.state.chords[Math.floor(Math.random() * 34)];\n        this.setState({\n            challenge: newchallenge,\n            allclickednotes: [],\n            styles: {\n                challenge: 'challenge',\n                win: 'hide',\n                lose: 'hide'\n            }\n        });\n    }\n\n    handleClick(note) {\n        let allclickednotes = this.state.allclickednotes;\n        let notesCopy = this.state.notes.slice();\n        const ding =  this.state.notes.indexOf(note);\n        notesCopy[ding].styling = \"noteboardbtn toggled\";\n        var clickednote = note.value;\n        this.setState({\n            allclickednotes: allclickednotes.concat(clickednote),\n            notes: notesCopy \n        });\n\n    }\n\n    countUp(){\n        let chordnotes = this.state.challenge.notes;\n        let allclickednotes = this.state.allclickednotes;\n        if(allclickednotes.length > 3){\n            if(this.containsAllNotes(allclickednotes,chordnotes)){\n                this.winner();\n            } else {\n                this.loser();\n            };\n            };\n    }\n\n    winner(){\n        console.log(\"I'm a winner!\");\n        // this.newChallenge();\n        // const newscore = this.state.score+1;\n        // const notesClear = [\n        //     {\n        //         id:1,\n        //         value:'E',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:2,\n        //         value:'F',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:3,\n        //         value:'F#',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:4,\n        //         value:'G',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:5,\n        //         value:'Gb',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:6,\n        //         value:'A',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:7,\n        //         value:'Bb',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:8,\n        //         value:'B',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:9,\n        //         value:'C',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:10,\n        //         value:'Db',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:11,\n        //         value:'D',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:12,\n        //         value:'Eb',\n        //         styling:'noteboardbtn'\n        //     },\n        // ];\n        this.setState({\n            // score: newscore,\n            // notes: notesClear,\n            styles: {\n                challenge: 'challenge',\n                win: 'icon',\n                lose: 'hide'\n            }\n        });\n    }\n\n    loser(){\n        console.log(\"I'm a loser!\");\n        this.setState({\n            // score: newscore,\n            // notes: notesClear,\n            styles: {\n                challenge: 'challenge',\n                win: 'hide',\n                lose: 'icon'\n            }\n        });\n        // this.newChallenge();\n        // const notesClear = [\n        //     {\n        //         id:1,\n        //         value:'E',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:2,\n        //         value:'F',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:3,\n        //         value:'F#',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:4,\n        //         value:'G',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:5,\n        //         value:'Gb',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:6,\n        //         value:'A',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:7,\n        //         value:'Bb',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:8,\n        //         value:'B',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:9,\n        //         value:'C',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:10,\n        //         value:'Db',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:11,\n        //         value:'D',\n        //         styling:'noteboardbtn'\n        //     },{\n        //         id:12,\n        //         value:'Eb',\n        //         styling:'noteboardbtn'\n        //     },\n        // ];\n        // this.setState({\n        //     notes: notesClear\n        // });\n    }\n\n    render() {\n        return (\n        <div className=\"total\">\n                <Challenge\n                    challenge={this.state.challenge}\n                    styles={this.state.styles}\n                    />\n                <Noteboard\n                    notes={this.state.notes}\n                    onClick={(note) => this.handleClick(note)}\n                    />\n                <div>{this.state.allclickednotes}</div>\n            </div>\n            );\n    }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}