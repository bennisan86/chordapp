{"ast":null,"code":"var _jsxFileName = \"/Users/bennisan/Sites/chordgame/src/Game.js\";\nimport React from 'react';\nimport './Game.css';\nimport './Game.sass';\nimport Challenge from './components/Challenge';\nimport Noteboard from './components/Noteboard';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chords: [{\n        chordname: 'Emaj7',\n        notes: ['note1', 'note2', 'note3']\n      }, {\n        chordname: 'Emin7',\n        notes: 'Emin7notes'\n      }, {\n        chordname: 'E7',\n        notes: 'E7notes'\n      }, {\n        chordname: 'Fmaj7',\n        notes: 'Fmaj7notes'\n      }, {\n        chordname: 'Fmin7',\n        notes: 'Fmin7notes'\n      }, {\n        chordname: 'F7',\n        notes: 'F7notes'\n      }, {\n        chordname: 'Gmaj7',\n        notes: 'Gmaj7notes'\n      }, {\n        chordname: 'Gmin7',\n        notes: 'Gmin7notes'\n      }, {\n        chordname: 'G7',\n        notes: 'G7notes'\n      }, {\n        chordname: 'Abmaj7',\n        notes: 'Abmaj7notes'\n      }, {\n        chordname: 'Abmin7',\n        notes: 'Abmin7notes'\n      }, {\n        chordname: 'Ab7',\n        notes: 'Ab7notes'\n      }, {\n        chordname: 'Amaj7',\n        notes: 'Amaj7notes'\n      }, {\n        chordname: 'Amin7',\n        notes: 'Amin7notes'\n      }, {\n        chordname: 'A7',\n        notes: 'A7notes'\n      }, {\n        chordname: 'Bbmaj7',\n        notes: 'Bbmaj7notes'\n      }, {\n        chordname: 'Bbmin7',\n        notes: 'Bbmin7notes'\n      }, {\n        chordname: 'Bb7',\n        notes: 'Bb7notes'\n      }, {\n        chordname: 'Bmaj7',\n        notes: 'Bmaj7notes'\n      }, {\n        chordname: 'Bmin7',\n        notes: 'Bmin7notes'\n      }, {\n        chordname: 'B7',\n        notes: 'B7notes'\n      }, {\n        chordname: 'Cmaj7',\n        notes: 'Cmaj7notes'\n      }, {\n        chordname: 'Cmin7',\n        notes: 'Cmin7notes'\n      }, {\n        chordname: 'C7',\n        notes: 'C7notes'\n      }, {\n        chordname: 'Dbmaj7',\n        notes: 'Dbmaj7notes'\n      }, {\n        chordname: 'Dbmin7',\n        notes: 'Dbmin7notes'\n      }, {\n        chordname: 'Db7',\n        notes: 'Db7notes'\n      }, {\n        chordname: 'Dmaj7',\n        notes: 'Dmaj7notes'\n      }, {\n        chordname: 'Dmin7',\n        notes: 'Dmin7notes'\n      }, {\n        chordname: 'D7',\n        notes: 'D7notes'\n      }, {\n        chordname: 'Ebmaj7',\n        notes: 'Ebmaj7notes'\n      }, {\n        chordname: 'Ebmin7',\n        notes: 'Ebmin7notes'\n      }, {\n        chordname: 'Eb7',\n        notes: 'Eb7notes'\n      }],\n      notes: ['E', 'F', 'F#', 'G', 'Gb', 'A', 'Bb', 'B', 'C', 'Db', 'D', 'Eb'],\n      allclickednotes: []\n    };\n  }\n\n  handleClick(i) {\n    var clickednote = i.target.value;\n    var allclickednotes = this.state.allclickednotes; // var allclickednotes = [];\n    // allclickednotes.push(clickednote);\n\n    this.setState({\n      allclickednotes: allclickednotes.concat(clickednote)\n    });\n\n    if (allclickednotes.length > 4) {\n      alert('hi');\n    }\n\n    ;\n    console.log(\"clickednote==\" + clickednote + \"allclickednotes==\" + allclickednotes);\n  }\n\n  render() {\n    //var randomchord = Math.floor(Math.random() * this.state.chords.length);\n    var chords = this.state.chords[0];\n    var notes = this.state.notes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, state.allclickednotes), React.createElement(Challenge, {\n      challenge: chords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(Noteboard, {\n      notes: notes,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/bennisan/Sites/chordgame/src/Game.js"],"names":["React","Challenge","Noteboard","Game","Component","constructor","props","state","chords","chordname","notes","allclickednotes","handleClick","i","clickednote","target","value","setState","concat","length","alert","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Game.css';\nimport './Game.sass';\nimport Challenge from './components/Challenge';\nimport Noteboard from './components/Noteboard';\n\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chords: [{\n                chordname: 'Emaj7',\n                notes: ['note1','note2','note3']\n            },{\n                chordname: 'Emin7',\n                notes: 'Emin7notes'\n            },{\n                chordname: 'E7',\n                notes: 'E7notes'\n            },{\n                chordname: 'Fmaj7',\n                notes: 'Fmaj7notes'\n            },{\n                chordname: 'Fmin7',\n                notes: 'Fmin7notes'\n            },{\n                chordname: 'F7',\n                notes: 'F7notes'\n            },{\n                chordname: 'Gmaj7',\n                notes: 'Gmaj7notes'\n            },{\n                chordname: 'Gmin7',\n                notes: 'Gmin7notes'\n            },{\n                chordname: 'G7',\n                notes: 'G7notes'\n            },{\n                chordname: 'Abmaj7',\n                notes: 'Abmaj7notes'\n            },{\n                chordname: 'Abmin7',\n                notes: 'Abmin7notes'\n            },{\n                chordname: 'Ab7',\n                notes: 'Ab7notes'\n            },{\n                chordname: 'Amaj7',\n                notes: 'Amaj7notes'\n            },{\n                chordname: 'Amin7',\n                notes: 'Amin7notes'\n            },{\n                chordname: 'A7',\n                notes: 'A7notes'\n            },{\n                chordname: 'Bbmaj7',\n                notes: 'Bbmaj7notes'\n            },{\n                chordname: 'Bbmin7',\n                notes: 'Bbmin7notes'\n            },{\n                chordname: 'Bb7',\n                notes: 'Bb7notes'\n            },{\n                chordname: 'Bmaj7',\n                notes: 'Bmaj7notes'\n            },{\n                chordname: 'Bmin7',\n                notes: 'Bmin7notes'\n            },{\n                chordname: 'B7',\n                notes: 'B7notes'\n            },{\n                chordname: 'Cmaj7',\n                notes: 'Cmaj7notes'\n            },{\n                chordname: 'Cmin7',\n                notes: 'Cmin7notes'\n            },{\n                chordname: 'C7',\n                notes: 'C7notes'\n            },{\n                chordname: 'Dbmaj7',\n                notes: 'Dbmaj7notes'\n            },{\n                chordname: 'Dbmin7',\n                notes: 'Dbmin7notes'\n            },{\n                chordname: 'Db7',\n                notes: 'Db7notes'\n            },{\n                chordname: 'Dmaj7',\n                notes: 'Dmaj7notes'\n            },{\n                chordname: 'Dmin7',\n                notes: 'Dmin7notes'\n            },{\n                chordname: 'D7',\n                notes: 'D7notes'\n            },{\n                chordname: 'Ebmaj7',\n                notes: 'Ebmaj7notes'\n            },{\n                chordname: 'Ebmin7',\n                notes: 'Ebmin7notes'\n            },{\n                chordname: 'Eb7',\n                notes: 'Eb7notes'\n            }],\n            notes: ['E','F','F#','G','Gb','A','Bb','B','C','Db','D','Eb'],\n            allclickednotes: []\n        }\n    }\n\n\n    handleClick(i) {\n        var clickednote = i.target.value;\n        var allclickednotes = this.state.allclickednotes;\n        // var allclickednotes = [];\n        // allclickednotes.push(clickednote);\n        this.setState({\n            allclickednotes: allclickednotes.concat(clickednote),\n        });\n        if(allclickednotes.length > 4){\n            alert('hi');\n        };\n        console.log(\"clickednote==\"+clickednote+\"allclickednotes==\"+allclickednotes);\n    }\n\n    render() {\n        //var randomchord = Math.floor(Math.random() * this.state.chords.length);\n        var chords = this.state.chords[0];\n        var notes = this.state.notes;\n        return (\n            <div>\n                <div>{state.allclickednotes}</div>\n                <Challenge challenge={chords} />\n                <Noteboard\n                    notes={notes}\n                    onClick={(i) => this.handleClick(i)}\n                    />\n            </div>\n            );\n    }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}