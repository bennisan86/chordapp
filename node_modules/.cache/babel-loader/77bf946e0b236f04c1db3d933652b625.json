{"ast":null,"code":"var _jsxFileName = \"/Users/bennisan/Sites/chordgame/src/components/Noteboard.js\";\nimport React from 'react';\nimport Note from './Note';\n\nclass Noteboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buttoncount: 0,\n      clean: false\n    };\n  }\n\n  toggleClass(i) {\n    const count = this.state.buttoncount;\n\n    if (count < 3) {\n      var newcount = this.state.buttoncount + 1;\n      this.setState({\n        buttoncount: newcount,\n        clean: false\n      });\n    } else {\n      var cleancount = 0;\n      this.setState({\n        buttoncount: cleancount,\n        clean: true\n      });\n    }\n\n    this.props.onClick(i);\n  }\n\n  render() {\n    const allnotes = this.props.notes;\n    const listItems = allnotes.map(note => React.createElement(Note, {\n      value: note,\n      key: note,\n      note: note,\n      onClick: i => this.toggleClass(i),\n      active: this.state.clean,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, note));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"noteboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, listItems), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.buttoncount));\n  }\n\n}\n\nexport default Noteboard;","map":{"version":3,"sources":["/Users/bennisan/Sites/chordgame/src/components/Noteboard.js"],"names":["React","Note","Noteboard","Component","constructor","props","state","buttoncount","clean","toggleClass","i","count","newcount","setState","cleancount","onClick","render","allnotes","notes","listItems","map","note"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,CADF;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAIH;;AAEDC,EAAAA,WAAW,CAACC,CAAD,EAAI;AACb,UAAMC,KAAK,GAAG,KAAKL,KAAL,CAAWC,WAAzB;;AACA,QAAII,KAAK,GAAG,CAAZ,EAAc;AACZ,UAAIC,QAAQ,GAAG,KAAKN,KAAL,CAAWC,WAAX,GAAyB,CAAxC;AACA,WAAKM,QAAL,CAAc;AACZN,QAAAA,WAAW,EAAEK,QADD;AAEZJ,QAAAA,KAAK,EAAE;AAFK,OAAd;AAID,KAND,MAMO;AACL,UAAIM,UAAU,GAAG,CAAjB;AACA,WAAKD,QAAL,CAAc;AACZN,QAAAA,WAAW,EAAEO,UADD;AAEZN,QAAAA,KAAK,EAAE;AAFK,OAAd;AAID;;AAEC,SAAKH,KAAL,CAAWU,OAAX,CAAmBL,CAAnB;AACH;;AAIDM,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG,KAAKZ,KAAL,CAAWa,KAA5B;AACA,UAAMC,SAAS,GAAGF,QAAQ,CAACG,GAAT,CAAcC,IAAD,IAC3B,oBAAC,IAAD;AACI,MAAA,KAAK,EAAEA,IADX;AAEI,MAAA,GAAG,EAAEA,IAFT;AAGI,MAAA,IAAI,EAAEA,IAHV;AAII,MAAA,OAAO,EAAGX,CAAD,IAAO,KAAKD,WAAL,CAAiBC,CAAjB,CAJpB;AAKI,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWE,KALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMMa,IANN,CADc,CAAlB;AASA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BF,SAA5B,CADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKb,KAAL,CAAWC,WAAjB,CAHF,CADF;AAOC;;AAhD+B;;AAmDxC,eAAeL,SAAf","sourcesContent":["import React from 'react';\nimport Note from './Note';\n\n\nclass Noteboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          buttoncount: 0,\n          clean: false\n        };\n    }\n\n    toggleClass(i) {\n      const count = this.state.buttoncount;\n      if (count < 3){\n        var newcount = this.state.buttoncount + 1;\n        this.setState({\n          buttoncount: newcount,\n          clean: false\n        });\n      } else {\n        var cleancount = 0;\n        this.setState({\n          buttoncount: cleancount,\n          clean: true\n        });\n      }\n\n        this.props.onClick(i);\n    };\n\n    \n\n    render() {\n        const allnotes = this.props.notes;\n        const listItems = allnotes.map((note) =>\n            <Note\n                value={note}\n                key={note}\n                note={note}\n                onClick={(i) => this.toggleClass(i)}\n                active={this.state.clean}\n                >{note}</Note>\n            );\n        return (\n          <div>\n            <div className=\"noteboard\">{listItems}\n            </div>\n            <div>{this.state.buttoncount}</div>\n          </div>\n          );\n        }\n    }\n\nexport default Noteboard;\n\n\n"]},"metadata":{},"sourceType":"module"}