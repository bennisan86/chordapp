{"ast":null,"code":"var _jsxFileName = \"/Users/bennisan/Sites/chordgame/src/Game.js\";\nimport React from 'react';\nimport './Game.css';\nimport './Game.sass';\nimport Challenge from './components/Challenge';\nimport Noteboard from './components/Noteboard';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chords: [{\n        chordname: 'Emaj7',\n        notes: ['E', 'F', 'F#', 'G']\n      }, {\n        chordname: 'Emin7',\n        notes: 'Emin7notes'\n      }, {\n        chordname: 'E7',\n        notes: 'E7notes'\n      }, {\n        chordname: 'Fmaj7',\n        notes: 'Fmaj7notes'\n      }, {\n        chordname: 'Fmin7',\n        notes: 'Fmin7notes'\n      }, {\n        chordname: 'F7',\n        notes: 'F7notes'\n      }, {\n        chordname: 'Gmaj7',\n        notes: 'Gmaj7notes'\n      }, {\n        chordname: 'Gmin7',\n        notes: 'Gmin7notes'\n      }, {\n        chordname: 'G7',\n        notes: 'G7notes'\n      }, {\n        chordname: 'Abmaj7',\n        notes: 'Abmaj7notes'\n      }, {\n        chordname: 'Abmin7',\n        notes: 'Abmin7notes'\n      }, {\n        chordname: 'Ab7',\n        notes: 'Ab7notes'\n      }, {\n        chordname: 'Amaj7',\n        notes: 'Amaj7notes'\n      }, {\n        chordname: 'Amin7',\n        notes: 'Amin7notes'\n      }, {\n        chordname: 'A7',\n        notes: 'A7notes'\n      }, {\n        chordname: 'Bbmaj7',\n        notes: 'Bbmaj7notes'\n      }, {\n        chordname: 'Bbmin7',\n        notes: 'Bbmin7notes'\n      }, {\n        chordname: 'Bb7',\n        notes: 'Bb7notes'\n      }, {\n        chordname: 'Bmaj7',\n        notes: 'Bmaj7notes'\n      }, {\n        chordname: 'Bmin7',\n        notes: 'Bmin7notes'\n      }, {\n        chordname: 'B7',\n        notes: 'B7notes'\n      }, {\n        chordname: 'Cmaj7',\n        notes: 'Cmaj7notes'\n      }, {\n        chordname: 'Cmin7',\n        notes: 'Cmin7notes'\n      }, {\n        chordname: 'C7',\n        notes: 'C7notes'\n      }, {\n        chordname: 'Dbmaj7',\n        notes: 'Dbmaj7notes'\n      }, {\n        chordname: 'Dbmin7',\n        notes: 'Dbmin7notes'\n      }, {\n        chordname: 'Db7',\n        notes: 'Db7notes'\n      }, {\n        chordname: 'Dmaj7',\n        notes: 'Dmaj7notes'\n      }, {\n        chordname: 'Dmin7',\n        notes: 'Dmin7notes'\n      }, {\n        chordname: 'D7',\n        notes: 'D7notes'\n      }, {\n        chordname: 'Ebmaj7',\n        notes: 'Ebmaj7notes'\n      }, {\n        chordname: 'Ebmin7',\n        notes: 'Ebmin7notes'\n      }, {\n        chordname: 'Eb7',\n        notes: 'Eb7notes'\n      }],\n      notes: ['E', 'F', 'F#', 'G', 'Gb', 'A', 'Bb', 'B', 'C', 'Db', 'D', 'Eb'],\n      allclickednotes: []\n    };\n  }\n\n  containsAllNotes(arr1, arr2) {\n    console.log(arr1, arr2); // var containsAll = arr1.every(i => arr2.includes(i));\n\n    for (var i = 0; i < arr1.length; i++) {\n      console.log(\"OR IS IT?\", arr1);\n    }\n  }\n\n  handleClick(i) {\n    var clickednote = i.target.value;\n    var allclickednotes = this.state.allclickednotes;\n    this.setState({\n      allclickednotes: allclickednotes.concat(clickednote)\n    });\n  }\n\n  render() {\n    // var randomchord = Math.floor(Math.random() * this.state.chords.length);\n    var randomchord = 0;\n    var chords = this.state.chords[randomchord];\n    var notes = this.state.notes;\n    var allclickednotes = this.state.allclickednotes;\n    var chordnotes = chords.notes;\n\n    if (this.state.allclickednotes.length === 4) {\n      this.containsAllNotes(allclickednotes, chordnotes);\n    }\n\n    ;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, allclickednotes), React.createElement(Challenge, {\n      challenge: chords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(Noteboard, {\n      notes: notes,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/bennisan/Sites/chordgame/src/Game.js"],"names":["React","Challenge","Noteboard","Game","Component","constructor","props","state","chords","chordname","notes","allclickednotes","containsAllNotes","arr1","arr2","console","log","i","length","handleClick","clickednote","target","value","setState","concat","render","randomchord","chordnotes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAGA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,CAAC;AACLC,QAAAA,SAAS,EAAE,OADN;AAELC,QAAAA,KAAK,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,IAAT,EAAc,GAAd;AAFF,OAAD,EAGN;AACED,QAAAA,SAAS,EAAE,OADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAHM,EAMN;AACED,QAAAA,SAAS,EAAE,IADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OANM,EASN;AACED,QAAAA,SAAS,EAAE,OADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OATM,EAYN;AACED,QAAAA,SAAS,EAAE,OADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAZM,EAeN;AACED,QAAAA,SAAS,EAAE,IADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAfM,EAkBN;AACED,QAAAA,SAAS,EAAE,OADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAlBM,EAqBN;AACED,QAAAA,SAAS,EAAE,OADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OArBM,EAwBN;AACED,QAAAA,SAAS,EAAE,IADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAxBM,EA2BN;AACED,QAAAA,SAAS,EAAE,QADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OA3BM,EA8BN;AACED,QAAAA,SAAS,EAAE,QADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OA9BM,EAiCN;AACED,QAAAA,SAAS,EAAE,KADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAjCM,EAoCN;AACED,QAAAA,SAAS,EAAE,OADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OApCM,EAuCN;AACED,QAAAA,SAAS,EAAE,OADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAvCM,EA0CN;AACED,QAAAA,SAAS,EAAE,IADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OA1CM,EA6CN;AACED,QAAAA,SAAS,EAAE,QADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OA7CM,EAgDN;AACED,QAAAA,SAAS,EAAE,QADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAhDM,EAmDN;AACED,QAAAA,SAAS,EAAE,KADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAnDM,EAsDN;AACED,QAAAA,SAAS,EAAE,OADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAtDM,EAyDN;AACED,QAAAA,SAAS,EAAE,OADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAzDM,EA4DN;AACED,QAAAA,SAAS,EAAE,IADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OA5DM,EA+DN;AACED,QAAAA,SAAS,EAAE,OADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OA/DM,EAkEN;AACED,QAAAA,SAAS,EAAE,OADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAlEM,EAqEN;AACED,QAAAA,SAAS,EAAE,IADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OArEM,EAwEN;AACED,QAAAA,SAAS,EAAE,QADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAxEM,EA2EN;AACED,QAAAA,SAAS,EAAE,QADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OA3EM,EA8EN;AACED,QAAAA,SAAS,EAAE,KADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OA9EM,EAiFN;AACED,QAAAA,SAAS,EAAE,OADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAjFM,EAoFN;AACED,QAAAA,SAAS,EAAE,OADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OApFM,EAuFN;AACED,QAAAA,SAAS,EAAE,IADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAvFM,EA0FN;AACED,QAAAA,SAAS,EAAE,QADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OA1FM,EA6FN;AACED,QAAAA,SAAS,EAAE,QADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OA7FM,EAgGN;AACED,QAAAA,SAAS,EAAE,KADb;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAhGM,CADC;AAqGTA,MAAAA,KAAK,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,IAAT,EAAc,GAAd,EAAkB,IAAlB,EAAuB,GAAvB,EAA2B,IAA3B,EAAgC,GAAhC,EAAoC,GAApC,EAAwC,IAAxC,EAA6C,GAA7C,EAAiD,IAAjD,CArGE;AAsGTC,MAAAA,eAAe,EAAE;AAtGR,KAAb;AAwGH;;AAEDC,EAAAA,gBAAgB,CAACC,IAAD,EAAMC,IAAN,EAAW;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,IAAlB,EADuB,CAEvB;;AACA,SAAM,IAAIG,CAAC,GAAC,CAAZ,EAAeA,CAAC,GAAGJ,IAAI,CAACK,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjCF,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBH,IAAxB;AACH;AAEJ;;AAEDM,EAAAA,WAAW,CAACF,CAAD,EAAI;AACX,QAAIG,WAAW,GAAGH,CAAC,CAACI,MAAF,CAASC,KAA3B;AACA,QAAIX,eAAe,GAAG,KAAKJ,KAAL,CAAWI,eAAjC;AACA,SAAKY,QAAL,CAAc;AACVZ,MAAAA,eAAe,EAAEA,eAAe,CAACa,MAAhB,CAAuBJ,WAAvB;AADP,KAAd;AAGH;;AAEDK,EAAAA,MAAM,GAAG;AACL;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIlB,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAX,CAAkBkB,WAAlB,CAAb;AACA,QAAIhB,KAAK,GAAG,KAAKH,KAAL,CAAWG,KAAvB;AACA,QAAIC,eAAe,GAAG,KAAKJ,KAAL,CAAWI,eAAjC;AACA,QAAIgB,UAAU,GAAGnB,MAAM,CAACE,KAAxB;;AACA,QAAG,KAAKH,KAAL,CAAWI,eAAX,CAA2BO,MAA3B,KAAsC,CAAzC,EAA2C;AACvC,WAAKN,gBAAL,CAAsBD,eAAtB,EAAsCgB,UAAtC;AACH;;AAAA;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMhB,eAAN,CADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEH,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAEE,KADX;AAEI,MAAA,OAAO,EAAGO,CAAD,IAAO,KAAKE,WAAL,CAAiBF,CAAjB,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAUH;;AAlJ8B;;AAqJnC,eAAed,IAAf","sourcesContent":["import React from 'react';\nimport './Game.css';\nimport './Game.sass';\nimport Challenge from './components/Challenge';\nimport Noteboard from './components/Noteboard';\n\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chords: [{\n                chordname: 'Emaj7',\n                notes: ['E','F','F#','G']\n            },{\n                chordname: 'Emin7',\n                notes: 'Emin7notes'\n            },{\n                chordname: 'E7',\n                notes: 'E7notes'\n            },{\n                chordname: 'Fmaj7',\n                notes: 'Fmaj7notes'\n            },{\n                chordname: 'Fmin7',\n                notes: 'Fmin7notes'\n            },{\n                chordname: 'F7',\n                notes: 'F7notes'\n            },{\n                chordname: 'Gmaj7',\n                notes: 'Gmaj7notes'\n            },{\n                chordname: 'Gmin7',\n                notes: 'Gmin7notes'\n            },{\n                chordname: 'G7',\n                notes: 'G7notes'\n            },{\n                chordname: 'Abmaj7',\n                notes: 'Abmaj7notes'\n            },{\n                chordname: 'Abmin7',\n                notes: 'Abmin7notes'\n            },{\n                chordname: 'Ab7',\n                notes: 'Ab7notes'\n            },{\n                chordname: 'Amaj7',\n                notes: 'Amaj7notes'\n            },{\n                chordname: 'Amin7',\n                notes: 'Amin7notes'\n            },{\n                chordname: 'A7',\n                notes: 'A7notes'\n            },{\n                chordname: 'Bbmaj7',\n                notes: 'Bbmaj7notes'\n            },{\n                chordname: 'Bbmin7',\n                notes: 'Bbmin7notes'\n            },{\n                chordname: 'Bb7',\n                notes: 'Bb7notes'\n            },{\n                chordname: 'Bmaj7',\n                notes: 'Bmaj7notes'\n            },{\n                chordname: 'Bmin7',\n                notes: 'Bmin7notes'\n            },{\n                chordname: 'B7',\n                notes: 'B7notes'\n            },{\n                chordname: 'Cmaj7',\n                notes: 'Cmaj7notes'\n            },{\n                chordname: 'Cmin7',\n                notes: 'Cmin7notes'\n            },{\n                chordname: 'C7',\n                notes: 'C7notes'\n            },{\n                chordname: 'Dbmaj7',\n                notes: 'Dbmaj7notes'\n            },{\n                chordname: 'Dbmin7',\n                notes: 'Dbmin7notes'\n            },{\n                chordname: 'Db7',\n                notes: 'Db7notes'\n            },{\n                chordname: 'Dmaj7',\n                notes: 'Dmaj7notes'\n            },{\n                chordname: 'Dmin7',\n                notes: 'Dmin7notes'\n            },{\n                chordname: 'D7',\n                notes: 'D7notes'\n            },{\n                chordname: 'Ebmaj7',\n                notes: 'Ebmaj7notes'\n            },{\n                chordname: 'Ebmin7',\n                notes: 'Ebmin7notes'\n            },{\n                chordname: 'Eb7',\n                notes: 'Eb7notes'\n            }],\n            notes: ['E','F','F#','G','Gb','A','Bb','B','C','Db','D','Eb'],\n            allclickednotes: []\n        }\n    }\n\n    containsAllNotes(arr1,arr2){\n        console.log(arr1, arr2);\n        // var containsAll = arr1.every(i => arr2.includes(i));\n        for ( var i=0; i < arr1.length; i++) {\n            console.log(\"OR IS IT?\",arr1);\n        }\n\n    }\n\n    handleClick(i) {\n        var clickednote = i.target.value;\n        var allclickednotes = this.state.allclickednotes;\n        this.setState({\n            allclickednotes: allclickednotes.concat(clickednote),\n        });\n    }\n\n    render() {\n        // var randomchord = Math.floor(Math.random() * this.state.chords.length);\n        var randomchord = 0;\n        var chords = this.state.chords[randomchord];\n        var notes = this.state.notes;\n        var allclickednotes = this.state.allclickednotes;\n        var chordnotes = chords.notes;\n        if(this.state.allclickednotes.length === 4){\n            this.containsAllNotes(allclickednotes,chordnotes)\n        };\n        return (\n            <div>\n                <div>{allclickednotes}</div>\n                <Challenge challenge={chords} />\n                <Noteboard\n                    notes={notes}\n                    onClick={(i) => this.handleClick(i)}\n                    />\n            </div>\n            );\n    }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}