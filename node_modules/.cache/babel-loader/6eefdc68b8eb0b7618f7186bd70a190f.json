{"ast":null,"code":"var _jsxFileName = \"/Users/bennisan/Sites/chordgame/src/components/Noteboard.js\";\nimport React from 'react';\nimport Note from './Note';\n\nclass Noteboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addFavorite = item => {\n      const _this$state = this.state,\n            items = _this$state.items,\n            favorites = _this$state.favorites;\n      const copyFavorites = [...favorites];\n\n      if (!favorites.some(favorite => favorite.id === item.id)) {\n        copyFavorites.push(item);\n        this.setState({\n          favorites: copyFavorites\n        });\n      }\n    };\n\n    this.state = {\n      items: [{\n        id: 1,\n        text: \"item 1\",\n        class: \"noteboardbtn\"\n      }, {\n        id: 2,\n        text: \"item 2\",\n        class: \"noteboardbtn\"\n      }],\n      favorites: []\n    };\n    this.clearAll = this.clearAll.bind(this);\n  } // toggleClass(i) {\n  //     const currentState = this.state.active;\n  //     this.setState({ active: !currentState });\n  //     this.props.onClick(i);\n  //     console.log(i.target);\n  // };\n\n\n  clearAll() {\n    const clearedFavorites = [];\n    this.setState({\n      favorites: clearedFavorites\n    });\n  }\n\n  render() {\n    // const allnotes = this.props.notes;\n    const _this$state2 = this.state,\n          items = _this$state2.items,\n          favorites = _this$state2.favorites;\n    const addFavorite = this.addFavorite; // const listItems = allnotes.map((note) =>\n    //     <Note\n    //         value={note}\n    //         key={note}\n    //         note={note}\n    //         onClick={(i) => this.toggleClass(i)}\n    //         // className={ this.state.active ? \"noteboardbtn toggled\" : \"noteboardbtn\" }\n    //         active={this.state.active}\n    //         >{note}</Note>\n    //     );\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Results, {\n      items: items,\n      favorites: favorites,\n      addFavorite: addFavorite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.clearAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"clear\"));\n  }\n\n}\n\nclass Results extends React.Component {\n  render() {\n    const _this$props = this.props,\n          items = _this$props.items,\n          favorites = _this$props.favorites,\n          addFavorite = _this$props.addFavorite;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, items.map(item => React.createElement(\"div\", {\n      key: item.id,\n      onClick: () => {\n        addFavorite(item);\n      },\n      className: favorites.includes(item.class) && 'toggled',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, item.text)));\n  }\n\n}\n\nexport default Noteboard;","map":{"version":3,"sources":["/Users/bennisan/Sites/chordgame/src/components/Noteboard.js"],"names":["React","Note","Noteboard","Component","constructor","props","addFavorite","item","state","items","favorites","copyFavorites","some","favorite","id","push","setState","text","class","clearAll","bind","clearedFavorites","render","Results","map","includes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Note from './Note';\n\n\nclass Noteboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [{ id: 1, text: \"item 1\", class: \"noteboardbtn\" }, { id: 2, text: \"item 2\", class: \"noteboardbtn\" }],\n            favorites: []\n        };\n        this.clearAll = this.clearAll.bind(this);\n\n    }\n\n    // toggleClass(i) {\n    //     const currentState = this.state.active;\n    //     this.setState({ active: !currentState });\n    //     this.props.onClick(i);\n    //     console.log(i.target);\n    // };\n\n\n\n    addFavorite = item => {\n        const { items, favorites } = this.state;\n        const copyFavorites = [...favorites];\n    \n        if (!favorites.some(favorite => favorite.id === item.id)) {\n          copyFavorites.push(item);\n          this.setState({ favorites: copyFavorites });\n        }\n      };\n    \n      clearAll(){\n        const clearedFavorites = [];\n        this.setState({ favorites: clearedFavorites });\n      };\n        \n\n    render() {\n        // const allnotes = this.props.notes;\n\n        const { items, favorites } = this.state;\n        const { addFavorite } = this;\n\n\n        // const listItems = allnotes.map((note) =>\n        //     <Note\n        //         value={note}\n        //         key={note}\n        //         note={note}\n        //         onClick={(i) => this.toggleClass(i)}\n        //         // className={ this.state.active ? \"noteboardbtn toggled\" : \"noteboardbtn\" }\n        //         active={this.state.active}\n\n        //         >{note}</Note>\n        //     );\n        return (\n            <div>\n                <Results\n                items={items}\n                favorites={favorites}\n                addFavorite={addFavorite}\n                />\n                <button onClick={this.clearAll}>clear</button>\n            </div>\n          );\n        }\n    }\n\n\n    class Results extends React.Component {\n        render() {\n          const { items, favorites, addFavorite } = this.props;\n      \n          return (\n            <div>\n              {items.map(item => (\n                <div\n                  key={item.id}\n                  onClick={() => {\n                    addFavorite(item);\n                  }}\n                  className={favorites.includes(item.class) && 'toggled'}\n\n                >\n                  {item.text}\n                </div>\n              ))}\n            </div>\n          );\n        }\n      }\n\nexport default Noteboard;\n\n"]},"metadata":{},"sourceType":"module"}